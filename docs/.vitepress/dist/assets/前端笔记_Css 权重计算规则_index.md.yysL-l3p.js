import{_ as s,o as i,c as a,R as n}from"./chunks/framework.rSPAVkc7.js";const l="/fe-blog/assets/image.AO7HyFGq.png",y=JSON.parse('{"title":"Css 权重计算规则","description":"","frontmatter":{},"headers":[],"relativePath":"前端笔记/Css 权重计算规则/index.md","filePath":"前端笔记/Css 权重计算规则/index.md"}'),t={name:"前端笔记/Css 权重计算规则/index.md"},h=n(`<h1 id="css-权重计算规则" tabindex="-1">Css 权重计算规则 <a class="header-anchor" href="#css-权重计算规则" aria-label="Permalink to &quot;Css 权重计算规则&quot;">​</a></h1><p><strong>CSS：Cascading Stylesheets（层叠样式表，也叫级联样式表）</strong></p><h2 id="级联-层叠-算法可以分为以下四个模块" tabindex="-1">级联（层叠）算法可以分为以下四个模块： <a class="header-anchor" href="#级联-层叠-算法可以分为以下四个模块" aria-label="Permalink to &quot;级联（层叠）算法可以分为以下四个模块：&quot;">​</a></h2><ol><li><strong>位置和出现的顺序</strong>：css 规则出现的顺序。</li><li><strong>特征性（具体性 Specificity）</strong>：确定 css 选择器具有最高匹配权的算法。</li><li><strong>来源</strong>： css 在何时何处生成。它是否是一个浏览器样式或者是浏览器插件添加的样式，又或者是你写的 css 代码。</li><li><strong>重要性</strong>：一些 css 规则具有更高的重要性，特别是包含!important 值的规则。</li></ol><h2 id="一-位置和出现的顺序" tabindex="-1"><strong>一：位置和出现的顺序</strong> <a class="header-anchor" href="#一-位置和出现的顺序" aria-label="Permalink to &quot;**一：位置和出现的顺序**&quot;">​</a></h2><p>link，style 样式<strong>越靠后权重越高</strong>，但是不适用于內联样式（通过元素 style 属性定义的样式，<strong>内联样式会覆盖所有其他的 css</strong>，无论这些 css 出现的位置和顺序，除非 css 规则的声明值定义为!important，!important 比内联样式的重要性更高。）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yellow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">这里是红色的按钮&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="二-特征性-具体性-specificity" tabindex="-1"><strong>二：特征性（具体性 Specificity）</strong> <a class="header-anchor" href="#二-特征性-具体性-specificity" aria-label="Permalink to &quot;**二：特征性（具体性 Specificity）**&quot;">​</a></h2><p>特征性是一种决定哪个 css 选择器最具体的算法。这里的最具体的意思，你可以看成哪个 css 权重最高的意思，选择器权重最高的 css 规则，在规则冲突中将会胜出。 有了特征性算法，即使有多个不同的 css 规则具有不同的选择器产生了规则冲突，浏览器也可以决定最后使用哪个 css 规则去渲染页面。</p><h3 id="_1-特征性分数-权重" tabindex="-1"><strong>1. 特征性分数（权重）</strong> <a class="header-anchor" href="#_1-特征性分数-权重" aria-label="Permalink to &quot;**1. 特征性分数（权重）**&quot;">​</a></h3><p>比较两个选择器的特征性（权重）大小，实际上是计算两个选择器的分数（权重，后面我统称权重），<strong>权重大的将会在规则冲突中胜出</strong>。</p><h4 id="通配选择器-0" tabindex="-1">通配选择器：0 <a class="header-anchor" href="#通配选择器-0" aria-label="Permalink to &quot;通配选择器：0&quot;">​</a></h4><h4 id="类型-标签-选择器和伪元素选择器-1" tabindex="-1">类型（标签）选择器和伪元素选择器：1 <a class="header-anchor" href="#类型-标签-选择器和伪元素选择器-1" aria-label="Permalink to &quot;类型（标签）选择器和伪元素选择器：1&quot;">​</a></h4><h4 id="类选择器、伪类选择器和属性选择器-10" tabindex="-1">类选择器、伪类选择器和属性选择器：10 <a class="header-anchor" href="#类选择器、伪类选择器和属性选择器-10" aria-label="Permalink to &quot;类选择器、伪类选择器和属性选择器：10&quot;">​</a></h4><h4 id="id-选择器-100" tabindex="-1">ID 选择器：100 <a class="header-anchor" href="#id-选择器-100" aria-label="Permalink to &quot;ID 选择器：100&quot;">​</a></h4><h4 id="内联样式-1000" tabindex="-1">内联样式：1000 <a class="header-anchor" href="#内联样式-1000" aria-label="Permalink to &quot;内联样式：1000&quot;">​</a></h4><h4 id="important-10000" tabindex="-1">!important：10000 <a class="header-anchor" href="#important-10000" aria-label="Permalink to &quot;!important：10000&quot;">​</a></h4><h3 id="_2-权重的累加" tabindex="-1"><strong>2. 权重的累加</strong> <a class="header-anchor" href="#_2-权重的累加" aria-label="Permalink to &quot;**2. 权重的累加**&quot;">​</a></h3><p>一个选择器的权重分数是累加计算的。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// 假设有如下html：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">my-class</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> another-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot; href=&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 权重为 1 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 加一个类使选择器，权重为 11 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 再添加一个类名，权重为 21 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-class.another-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rebeccapurple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 在上面的基础上，添加一个属性，权重为 31 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-class.another-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">goldenrod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 添加一个伪类，权重为 41 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-class.another-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lightgrey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_3-可视化特征性" tabindex="-1"><strong>3. 可视化特征性</strong> <a class="header-anchor" href="#_3-可视化特征性" aria-label="Permalink to &quot;**3. 可视化特征性**&quot;">​</a></h3><p>至此你应该知道了如何去计算一个选择性的权重（分数）。如何去写一个规则覆盖另一个规则。下面的示意图很好的总结了各类型选择器的权重（分数）。 <img src="`+l+`" alt="image.png"> 最左侧是 id 选择器，中间是类选择器、属性选择器和伪类选择器，最后面是元素选择器和伪元素选择器。 如果用图中的格式描述权重，下面的权重为 0-4-1:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-class.another-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lightgrey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="三-来源" tabindex="-1"><strong>三：来源</strong> <a class="header-anchor" href="#三-来源" aria-label="Permalink to &quot;**三：来源**&quot;">​</a></h2><p>css 来自不同的地方，也会影响是否会在规则冲突中胜出。关于样式的来源的特征性从低到高如下：</p><ol><li>用户代理样式：也就是浏览器默认样式。</li><li>本地用户样式：一般来源于系统设定，也可以是浏览器插件设定的样式。某些浏览器插件允许用户定义自己的浏览器页面样式。</li><li>开发者定义的 css 规则：指网页开发者写下的 css 样式。</li><li>标记为!important 的 css: 网页开发者写的含!important 标记的 css 样式。</li><li>含!important 的本地用户样式：与 2 来源相同，不过这个 css 含有!important 标记。</li><li>含!important 的用户代理样式：与 1 来源相同，不过这个 css 含有!important 标记。</li></ol><h2 id="四-重要性" tabindex="-1"><strong>四：重要性</strong> <a class="header-anchor" href="#四-重要性" aria-label="Permalink to &quot;**四：重要性**&quot;">​</a></h2><p>并不是所有的 css 规则都和其他 css 按照同样方式计算特征性。 不同种类的 css 规则重要性<strong>从低到高</strong>依次如下：</p><ol><li>普通规则：例如 font-size、background 或者 color。</li><li>animation 规则。</li><li>!important 规则。</li><li>transition 规则。</li></ol><p>所以当某些动画规则或者变换规则激活时，它会取代普通规则，进行渲染页面。</p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ol><li><a href="https://web.dev/learn/css/" target="_blank" rel="noreferrer">学习参考</a></li><li><a href="https://pengfeixc.com/tutorial/css/specificity" target="_blank" rel="noreferrer">中文翻译</a></li></ol>`,32),e=[h];function p(k,r,o,E,d,c){return i(),a("div",null,e)}const u=s(t,[["render",p]]);export{y as __pageData,u as default};
