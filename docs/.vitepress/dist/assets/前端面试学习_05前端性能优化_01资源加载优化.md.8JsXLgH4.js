import{_ as e,o as a,c as t,R as i}from"./chunks/framework.rSPAVkc7.js";const S=JSON.parse('{"title":"资源加载优化","description":"","frontmatter":{},"headers":[],"relativePath":"前端面试学习/05前端性能优化/01资源加载优化.md","filePath":"前端面试学习/05前端性能优化/01资源加载优化.md"}'),o={name:"前端面试学习/05前端性能优化/01资源加载优化.md"},r=i('<h1 id="资源加载优化" tabindex="-1">资源加载优化 <a class="header-anchor" href="#资源加载优化" aria-label="Permalink to &quot;资源加载优化&quot;">​</a></h1><h2 id="_1-如何减少资源请求-什么是懒加载" tabindex="-1">1. 如何减少资源请求？什么是懒加载？ <a class="header-anchor" href="#_1-如何减少资源请求-什么是懒加载" aria-label="Permalink to &quot;1. 如何减少资源请求？什么是懒加载？&quot;">​</a></h2><p><strong>答案</strong>：减少资源请求的方法包括：</p><ol><li>合并文件（CSS, JavaScript）</li><li>使用 CSS Sprites</li><li>使用字体图标或 SVG 图标</li><li>使用缓存</li><li>实施懒加载</li></ol><p>懒加载是一种优化技术，它延迟加载非关键资源，只在需要时才加载。这可以减少初始页面加载时间，提高性能。</p><h2 id="_2-什么是-tree-shaking-如何在-webpack-中实现" tabindex="-1">2. 什么是 Tree Shaking？如何在 Webpack 中实现？ <a class="header-anchor" href="#_2-什么是-tree-shaking-如何在-webpack-中实现" aria-label="Permalink to &quot;2. 什么是 Tree Shaking？如何在 Webpack 中实现？&quot;">​</a></h2><p><strong>答案</strong>：Tree Shaking 是一种通过清除上下文中未引用代码来优化打包结果的技术。在 Webpack 中实现 Tree Shaking：</p><ol><li>使用 ES6 模块语法（import 和 export）</li><li>在 package.json 中设置 &quot;sideEffects&quot; 属性</li><li>使用生产模式（production mode）或在 Webpack 配置中启用优化</li></ol>',8),l=[r];function n(_,s,c,p,h,d){return a(),t("div",null,l)}const m=e(o,[["render",n]]);export{S as __pageData,m as default};
