import{_ as s,o as a,c as i,R as n}from"./chunks/framework.rSPAVkc7.js";const e="/fe-blog/assets/1.8f9zQ__H.png",t="/fe-blog/assets/2.iSswxlC3.png",l="/fe-blog/assets/3.fVpPY2KZ.png",p="/fe-blog/assets/4.fLNxSdJS.png",h="/fe-blog/assets/5.PoB47HKZ.png",r="/fe-blog/assets/6.zj7eoaKN.png",o="/fe-blog/assets/7.l2rXBEPG.png",k="/fe-blog/assets/8.EJdko-Ks.png",d="/fe-blog/assets/9.8bSFKDvu.png",g="/fe-blog/assets/10.npC-rRLg.png",c="/fe-blog/assets/11.XFIx7b4I.png",E="/fe-blog/assets/debug_1.2xGkd7in.png",m="/fe-blog/assets/debug_2._n-xKZ2c.png",u="/fe-blog/assets/debug_3.6IvFZ7Oa.png",b="/fe-blog/assets/debug_4.72IQDjly.png",w=JSON.parse('{"title":"记一次 React-Taro 配置错误&编译体积过大","description":"","frontmatter":{},"headers":[],"relativePath":"前端笔记/记一次 React-Taro 配置错误&编译体积过大/index.md","filePath":"前端笔记/记一次 React-Taro 配置错误&编译体积过大/index.md"}'),y={name:"前端笔记/记一次 React-Taro 配置错误&编译体积过大/index.md"},F=n('<h1 id="记一次-react-taro-配置错误-编译体积过大" tabindex="-1">记一次 React-Taro 配置错误&amp;编译体积过大 <a class="header-anchor" href="#记一次-react-taro-配置错误-编译体积过大" aria-label="Permalink to &quot;记一次 React-Taro 配置错误&amp;编译体积过大&quot;">​</a></h1><h2 id="tsconfig-配置出现错误提示" tabindex="-1">tsconfig 配置出现错误提示 <a class="header-anchor" href="#tsconfig-配置出现错误提示" aria-label="Permalink to &quot;tsconfig 配置出现错误提示&quot;">​</a></h2><h3 id="正确配置" tabindex="-1">正确配置 <a class="header-anchor" href="#正确配置" aria-label="Permalink to &quot;正确配置&quot;">​</a></h3><p><img src="'+e+'" alt=""></p><h3 id="错误配置" tabindex="-1">错误配置 <a class="header-anchor" href="#错误配置" aria-label="Permalink to &quot;错误配置&quot;">​</a></h3><p><img src="'+t+'" alt="image.png"></p><h3 id="解决方案" tabindex="-1"><strong>解决方案</strong> <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;**解决方案**&quot;">​</a></h3><p>key value 值需要对应完整，之前漏了 “*”</p><p><img src="'+l+`" alt=""></p><h2 id="导入出现错误提示" tabindex="-1">导入出现错误提示 <a class="header-anchor" href="#导入出现错误提示" aria-label="Permalink to &quot;导入出现错误提示&quot;">​</a></h2><h3 id="错误提示" tabindex="-1">错误提示 <a class="header-anchor" href="#错误提示" aria-label="Permalink to &quot;错误提示&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HarmonyImportSpecifierDependency.getLinkingErrors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (/Users/project/node_modules/webpack/lib/dependencies/HarmonyImportDependency.js:160:8)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ModuleDependencyWarning:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;default&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (imported </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;GoodsPage&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) was not found </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;../imgs/../imgs/packageB/Test/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="`+p+'" alt=""></p><h3 id="【解决方案-1】-导入地方使用-import-as-goodspage-from" tabindex="-1">【解决方案 1】：导入地方使用 import * as GoodsPage from &quot;&quot; <a class="header-anchor" href="#【解决方案-1】-导入地方使用-import-as-goodspage-from" aria-label="Permalink to &quot;【解决方案 1】：导入地方使用 import \\* as GoodsPage from &quot;&quot;&quot;">​</a></h3><p><img src="'+h+'" alt="image.png"></p><h3 id="【解决方案-1】带来了新的错误提示" tabindex="-1">【解决方案 1】带来了新的错误提示 <a class="header-anchor" href="#【解决方案-1】带来了新的错误提示" aria-label="Permalink to &quot;【解决方案 1】带来了新的错误提示&quot;">​</a></h3><p><img src="'+r+'" alt=""></p><p><img src="'+o+'" alt=""></p><p>程序正常跑，<strong>微信开发者工具提示重复注册页面了</strong></p><p><img src="'+k+'" alt=""></p><h3 id="网友解决方案" tabindex="-1">网友解决方案 <a class="header-anchor" href="#网友解决方案" aria-label="Permalink to &quot;网友解决方案&quot;">​</a></h3><p><a href="https://www.cnblogs.com/web1/p/9232410.html" target="_blank" rel="noreferrer">网友解决方案</a></p><p>没有解决本次问题</p><h3 id="最终解决方案" tabindex="-1">最终解决方案 <a class="header-anchor" href="#最终解决方案" aria-label="Permalink to &quot;最终解决方案&quot;">​</a></h3><p>一开始以为是 goods 跟 goodsPage 会有冲突，把文件夹改成了 Test 还是会</p><p><strong>问题出现：可能是因为 【页面组件】 导入了 【页面组件】</strong></p><p><strong>解决方案：把 公用代码 抽取成组件，而不是页面</strong></p><h2 id="编译体积过大" tabindex="-1">编译体积过大 <a class="header-anchor" href="#编译体积过大" aria-label="Permalink to &quot;编译体积过大&quot;">​</a></h2><h3 id="问题背景" tabindex="-1">问题背景 <a class="header-anchor" href="#问题背景" aria-label="Permalink to &quot;问题背景&quot;">​</a></h3><p>开发过程中，手机预览，主包体积过大。</p><h3 id="解决方案-1" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案-1" aria-label="Permalink to &quot;解决方案&quot;">​</a></h3><h4 id="_2-4m" tabindex="-1"><strong>2.4M</strong> <a class="header-anchor" href="#_2-4m" aria-label="Permalink to &quot;**2.4M**&quot;">​</a></h4><p><img src="'+d+`" alt=""></p><ol><li>关闭 prebundle</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;webpack5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 仅 webpack5 支持依赖预编译配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    prebundle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h4 id="_1-09m" tabindex="-1"><strong>1.09M</strong> <a class="header-anchor" href="#_1-09m" aria-label="Permalink to &quot;**1.09M**&quot;">​</a></h4><p><img src="`+g+`" alt=""></p><ol><li>npm install --save-dev thread-loader cache-loader taro-plugin-compiler-optimization</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@tarojs/plugin-html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;taro-plugin-compiler-optimization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mini</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  webpackChain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">chain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chain.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      plugin: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        install: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          plugin: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;terser-webpack-plugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          args: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              terserOptions: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                compress: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 默认使用terser压缩</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // mangle: false,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                keep_classnames: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不改变class名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                keep_fnames: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不改变函数名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h4 id="_700k" tabindex="-1">700K <a class="header-anchor" href="#_700k" aria-label="Permalink to &quot;700K&quot;">​</a></h4><p><img src="`+c+'" alt=""> 目前开发编译速度正常，打包(build)正常</p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ol><li><a href="https://www.cnblogs.com/web1/p/9232410.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/web1/p/9232410.html</a></li><li><a href="https://docs.taro.zone/docs/compile-optimized" target="_blank" rel="noreferrer">小程序编译优化指南 | Taro 文档</a></li><li><a href="https://docs.taro.zone/docs/prebundle" target="_blank" rel="noreferrer">依赖预加载 | Taro 文档</a></li></ol><h2 id="debug-过程" tabindex="-1">debug 过程 <a class="header-anchor" href="#debug-过程" aria-label="Permalink to &quot;debug 过程&quot;">​</a></h2><p><a href="https://docs.taro.zone/docs/compile-optimized" target="_blank" rel="noreferrer">小程序编译优化指南 | Taro 文档</a>，</p><p>发现打包产物 prebundle 体积很大，<a href="https://docs.taro.zone/docs/prebundle" target="_blank" rel="noreferrer">依赖预加载 | Taro 文档</a></p><p><img src="'+E+'" alt=""></p><p>将该属性设置为 false</p><p>后来发现 nutui-react-taro 文件过大 （1M 把 UI 框架剔除后重新打包，体积减少一半，当然这不是解决方案，UI 框架是必须要有的</p><p><img src="'+m+'" alt=""></p><p><img src="'+u+'" alt=""></p><p>按照官网配置 terser-webpack-plugin，体积减少 200K</p><p><img src="'+b+'" alt=""></p>',54),_=[F];function f(q,C,x,B,v,P){return a(),i("div",null,_)}const A=s(y,[["render",f]]);export{w as __pageData,A as default};
